{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0","program":"/home/matthew/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","prost","/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"prost-derive\"","-C","metadata=ea495ae21531500d","-C","extra-filename=-ea495ae21531500d","--out-dir","/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps","-L","dependency=/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps","--extern","byteorder=/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps/libbyteorder-36c7f9d92812ce81.rmeta","--extern","bytes=/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps/libbytes-3de275b91093dcfe.rmeta","--extern","prost_derive=/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps/libprost_derive-6508026a41053393.so","--cap-lints","allow","--error-format=json","--sysroot","/home/matthew/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/matthew/github.com/ampretia/wasm-contracts/rust-workspace/target/rls/debug/deps/libprost-ea495ae21531500d.rmeta"},"prelude":{"crate_id":{"name":"prost","disambiguator":[1527220525603700680,6904139664116589325]},"crate_root":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src","external_crates":[{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14071373652398347879,7103549041170480253]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5273437404553270099,5411348343046199890]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[976218546544352998,2134245565175613459]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13100362557277821204,18082047403827332368]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3605767859335716447,18368004652892255649]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7644919710974821109,7113146966867899407]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16182386318199163571,1953714320961812]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12664401352052491985,6928826529401171483]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17274879524252775070,15165904048009513825]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3349673540409454496,14630436784565510244]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14546748579478228105,1074460191194833292]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5671097699487010686,7534711367382902334]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7229860330014108182,6606161976056509340]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7609715969379266585,5596137465280250730]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","num":15,"id":{"name":"prost_derive","disambiguator":[14059225254442988537,8427390257223097502]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","num":16,"id":{"name":"bytes","disambiguator":[5604015932396551690,17611270832101749166]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","num":17,"id":{"name":"byteorder","disambiguator":[11313478889500985618,15806133796731293058]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","num":18,"id":{"name":"iovec","disambiguator":[14573816440830957265,8343811428407228812]}},{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","num":19,"id":{"name":"libc","disambiguator":[17373465292948197007,11592364133634976501]}}],"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":0,"byte_end":2551,"line_start":1,"line_end":80,"column_start":1,"column_end":25}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":236},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":149,"byte_end":160,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":162,"byte_end":173,"line_start":10,"line_end":10,"column_start":37,"column_end":48},"alias_span":null,"name":"EncodeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":200,"byte_end":207,"line_start":11,"line_end":11,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":2549,"byte_end":2550,"line_start":80,"line_end":80,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Message","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":0,"byte_end":2551,"line_start":1,"line_end":80,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":28},{"krate":0,"index":66},{"krate":0,"index":143},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":236},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":2985,"byte_end":2996,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"DecodeError","qualname":"::error::DecodeError","value":"DecodeError {  }","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"decl_id":null,"docs":" A Protobuf message decoding error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":3518,"byte_end":3521,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodeError>::new","value":"fn <S> (description: S) -> DecodeError","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DecodeError` with a 'best effort' root cause description.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":3900,"byte_end":3904,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"push","qualname":"<DecodeError>::push","value":"fn (&mut self, message: &'static str, field: &'static str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes a (message, field) name location pair on to the location stack.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4861,"byte_end":4872,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"EncodeError","qualname":"::error::EncodeError","value":"EncodeError {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" A Protobuf message encoding error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5214,"byte_end":5231,"line_start":90,"line_end":90,"column_start":12,"column_end":29},"name":"required_capacity","qualname":"<EncodeError>::required_capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required buffer capacity to encode the message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5375,"byte_end":5384,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"remaining","qualname":"<EncodeError>::remaining","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining length in the provided buffer at the time of encoding.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":38},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6227,"byte_end":6234,"line_start":11,"line_end":11,"column_start":11,"column_end":18},"name":"Message","qualname":"::message::Message","value":"Message: Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"decl_id":null,"docs":" A Protocol Buffers message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6473,"byte_end":6483,"line_start":18,"line_end":18,"column_start":8,"column_end":18},"name":"encode_raw","qualname":"::message::Message::encode_raw","value":"fn <B> (&self, buf: &mut B) -> ()","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6718,"byte_end":6729,"line_start":27,"line_end":27,"column_start":8,"column_end":19},"name":"merge_field","qualname":"::message::Message::merge_field","value":"fn <B> (&mut self, buf: &mut B) -> Result<(), DecodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decodes a field from a buffer, and merges it into `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6917,"byte_end":6928,"line_start":33,"line_end":33,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::message::Message::encoded_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Returns the encoded length of the message without a length delimiter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":7086,"byte_end":7092,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"encode","qualname":"::message::Message::encode","value":"fn <B> (&self, buf: &mut B) -> Result<(), EncodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Encodes the message to a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":7620,"byte_end":7643,"line_start":56,"line_end":56,"column_start":8,"column_end":31},"name":"encode_length_delimited","qualname":"::message::Message::encode_length_delimited","value":"fn <B> (&self, buf: &mut B) -> Result<(), EncodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Encodes the message with a length-delimiter to a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":8210,"byte_end":8216,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"decode","qualname":"::message::Message::decode","value":"fn <B> (buf: B) -> Result<Self, DecodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":8521,"byte_end":8544,"line_start":85,"line_end":85,"column_start":8,"column_end":31},"name":"decode_length_delimited","qualname":"::message::Message::decode_length_delimited","value":"fn <B> (buf: B) -> Result<Self, DecodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from the buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":8904,"byte_end":8909,"line_start":98,"line_end":98,"column_start":8,"column_end":13},"name":"merge","qualname":"::message::Message::merge","value":"fn <B> (&mut self, buf: B) -> Result<(), DecodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decodes an instance of the message from a buffer, and merges it into `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":9277,"byte_end":9299,"line_start":112,"line_end":112,"column_start":8,"column_end":30},"name":"merge_length_delimited","qualname":"::message::Message::merge_length_delimited","value":"fn <B> (&mut self, buf: B) -> Result<(), DecodeError>","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Decodes a length-delimited instance of the message from buffer, and\n merges it into `self`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":9564,"byte_end":9569,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"clear","qualname":"::message::Message::clear","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":38},"children":[],"decl_id":null,"docs":" Clears the message, resetting all fields to their default.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":143},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"encoding","qualname":"::encoding","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":265},{"krate":0,"index":284},{"krate":0,"index":283},{"krate":0,"index":281},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":286},{"krate":0,"index":305},{"krate":0,"index":324},{"krate":0,"index":343},{"krate":0,"index":362},{"krate":0,"index":381},{"krate":0,"index":400},{"krate":0,"index":181},{"krate":0,"index":419},{"krate":0,"index":435},{"krate":0,"index":451},{"krate":0,"index":467},{"krate":0,"index":483},{"krate":0,"index":499},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":190},{"krate":0,"index":196},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" Utility functions and types for encoding and decoding Protobuf types.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":153},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":17752,"byte_end":17765,"line_start":18,"line_end":18,"column_start":8,"column_end":21},"name":"encode_varint","qualname":"::encoding::encode_varint","value":"fn <B> (mut value: u64, buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Encodes an integer value into LEB128 variable length format, and writes it to the buffer.\n The buffer must have enough remaining space (maximum 10 bytes).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":17735,"byte_end":17744,"line_start":17,"line_end":17,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":155},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":18829,"byte_end":18842,"line_start":57,"line_end":57,"column_start":8,"column_end":21},"name":"decode_varint","qualname":"::encoding::decode_varint","value":"fn <B> (buf: &mut B) -> Result<u64, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a LEB128-encoded variable length integer from the buffer.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22249,"byte_end":22267,"line_start":184,"line_end":184,"column_start":8,"column_end":26},"name":"encoded_len_varint","qualname":"::encoding::encoded_len_varint","value":"fn (value: u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of the value in LEB128 variable length format.\n The returned value will be between 1 and 10, inclusive.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22232,"byte_end":22241,"line_start":183,"line_end":183,"column_start":1,"column_end":10}}]},{"kind":"TupleVariant","id":{"krate":0,"index":266},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22580,"byte_end":22586,"line_start":193,"line_end":193,"column_start":5,"column_end":11},"name":"Varint","qualname":"::encoding::WireType::Varint","value":"WireType::Varint","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22596,"byte_end":22608,"line_start":194,"line_end":194,"column_start":5,"column_end":17},"name":"SixtyFourBit","qualname":"::encoding::WireType::SixtyFourBit","value":"WireType::SixtyFourBit","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":272},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22618,"byte_end":22633,"line_start":195,"line_end":195,"column_start":5,"column_end":20},"name":"LengthDelimited","qualname":"::encoding::WireType::LengthDelimited","value":"WireType::LengthDelimited","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":275},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22643,"byte_end":22655,"line_start":196,"line_end":196,"column_start":5,"column_end":17},"name":"ThirtyTwoBit","qualname":"::encoding::WireType::ThirtyTwoBit","value":"WireType::ThirtyTwoBit","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":265},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22565,"byte_end":22573,"line_start":192,"line_end":192,"column_start":10,"column_end":18},"name":"WireType","qualname":"::encoding::WireType","value":"WireType::{Varint, SixtyFourBit, LengthDelimited, ThirtyTwoBit}","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22544,"byte_end":22555,"line_start":191,"line_end":191,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":161},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22674,"byte_end":22681,"line_start":199,"line_end":199,"column_start":11,"column_end":18},"name":"MIN_TAG","qualname":"::encoding::MIN_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22702,"byte_end":22709,"line_start":200,"line_end":200,"column_start":11,"column_end":18},"name":"MAX_TAG","qualname":"::encoding::MAX_TAG","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22817,"byte_end":22825,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"try_from","qualname":"<WireType>::try_from","value":"fn (val: u8) -> Result<WireType, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22796,"byte_end":22805,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":165},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":23332,"byte_end":23342,"line_start":222,"line_end":222,"column_start":8,"column_end":18},"name":"encode_key","qualname":"::encoding::encode_key","value":"fn <B> (tag: u32, wire_type: WireType, buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Encodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":23315,"byte_end":23324,"line_start":221,"line_end":221,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":23669,"byte_end":23679,"line_start":234,"line_end":234,"column_start":8,"column_end":18},"name":"decode_key","qualname":"::encoding::decode_key","value":"fn <B> (buf: &mut B) -> Result<(u32, WireType), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a Protobuf field key, which consists of a wire type designator and\n the field tag.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":23652,"byte_end":23661,"line_start":233,"line_end":233,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":169},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":24278,"byte_end":24285,"line_start":255,"line_end":255,"column_start":8,"column_end":15},"name":"key_len","qualname":"::encoding::key_len","value":"fn (tag: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of an encoded Protobuf field key with the given tag.\n The returned width will be between 1 and 5 bytes (inclusive).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":24261,"byte_end":24270,"line_start":254,"line_end":254,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":24472,"byte_end":24487,"line_start":262,"line_end":262,"column_start":8,"column_end":23},"name":"check_wire_type","qualname":"::encoding::check_wire_type","value":"fn (expected: WireType, actual: WireType) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the expected wire type matches the actual wire type,\n or returns an error result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":24455,"byte_end":24464,"line_start":261,"line_end":261,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":171},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":24894,"byte_end":24904,"line_start":274,"line_end":274,"column_start":8,"column_end":18},"name":"merge_loop","qualname":"::encoding::merge_loop","value":"fn <T, M, B> (value: &mut T, buf: &mut B, mut merge: M) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Helper function which abstracts reading a length delimiter prefix followed\n by decoding values until the length of bytes is exhausted.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":25470,"byte_end":25480,"line_start":296,"line_end":296,"column_start":8,"column_end":18},"name":"skip_field","qualname":"::encoding::skip_field","value":"fn <B> (wire_type: WireType, buf: &mut B) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":286},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31285,"byte_end":31289,"line_start":467,"line_end":467,"column_start":15,"column_end":19},"name":"bool","qualname":"::encoding::bool","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":300},{"krate":0,"index":292},{"krate":0,"index":302},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":298}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":305},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31403,"byte_end":31408,"line_start":470,"line_end":470,"column_start":14,"column_end":19},"name":"int32","qualname":"::encoding::int32","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":319},{"krate":0,"index":311},{"krate":0,"index":321},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":317}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31424,"byte_end":31429,"line_start":471,"line_end":471,"column_start":14,"column_end":19},"name":"int64","qualname":"::encoding::int64","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328},{"krate":0,"index":338},{"krate":0,"index":330},{"krate":0,"index":340},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":336}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31445,"byte_end":31451,"line_start":472,"line_end":472,"column_start":14,"column_end":20},"name":"uint32","qualname":"::encoding::uint32","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":347},{"krate":0,"index":357},{"krate":0,"index":349},{"krate":0,"index":359},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":355}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":362},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31467,"byte_end":31473,"line_start":473,"line_end":473,"column_start":14,"column_end":20},"name":"uint64","qualname":"::encoding::uint64","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":376},{"krate":0,"index":368},{"krate":0,"index":378},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":374}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":381},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31489,"byte_end":31495,"line_start":474,"line_end":474,"column_start":14,"column_end":20},"name":"sint32","qualname":"::encoding::sint32","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":395},{"krate":0,"index":387},{"krate":0,"index":397},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":393}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":400},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":31744,"byte_end":31750,"line_start":482,"line_end":482,"column_start":14,"column_end":20},"name":"sint64","qualname":"::encoding::sint64","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":414},{"krate":0,"index":406},{"krate":0,"index":416},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":412}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":419},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35412,"byte_end":35417,"line_start":598,"line_end":598,"column_start":5,"column_end":10},"name":"float","qualname":"::encoding::float","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":430},{"krate":0,"index":425},{"krate":0,"index":432},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35515,"byte_end":35521,"line_start":606,"line_end":606,"column_start":5,"column_end":11},"name":"double","qualname":"::encoding::double","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":446},{"krate":0,"index":441},{"krate":0,"index":448},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":451},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35619,"byte_end":35626,"line_start":614,"line_end":614,"column_start":5,"column_end":12},"name":"fixed32","qualname":"::encoding::fixed32","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":462},{"krate":0,"index":457},{"krate":0,"index":464},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":467},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35724,"byte_end":35731,"line_start":622,"line_end":622,"column_start":5,"column_end":12},"name":"fixed64","qualname":"::encoding::fixed64","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":478},{"krate":0,"index":473},{"krate":0,"index":480},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":483},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35829,"byte_end":35837,"line_start":630,"line_end":630,"column_start":5,"column_end":13},"name":"sfixed32","qualname":"::encoding::sfixed32","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":494},{"krate":0,"index":489},{"krate":0,"index":496},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":499},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":35935,"byte_end":35943,"line_start":638,"line_end":638,"column_start":5,"column_end":13},"name":"sfixed64","qualname":"::encoding::sfixed64","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":510},{"krate":0,"index":505},{"krate":0,"index":512},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":183},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":37907,"byte_end":37913,"line_start":699,"line_end":699,"column_start":9,"column_end":15},"name":"string","qualname":"::encoding::string","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":520},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":37946,"byte_end":37952,"line_start":702,"line_end":702,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::string::encode","value":"fn <B> (tag: u32, value: &String, buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":38193,"byte_end":38198,"line_start":710,"line_end":710,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::string::merge","value":"fn <B> (wire_type: WireType, value: &mut String, buf: &mut B) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":38840,"byte_end":38845,"line_start":728,"line_end":728,"column_start":9,"column_end":14},"name":"bytes","qualname":"::encoding::bytes","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":527},{"krate":0,"index":522},{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":38878,"byte_end":38884,"line_start":731,"line_end":731,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::bytes::encode","value":"fn <B> (tag: u32, value: &Vec<u8>, buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":39116,"byte_end":39121,"line_start":740,"line_end":740,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::bytes::merge","value":"fn <B> (wire_type: WireType, value: &mut Vec<u8>, buf: &mut B) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":196},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":40026,"byte_end":40033,"line_start":773,"line_end":773,"column_start":9,"column_end":16},"name":"message","qualname":"::encoding::message","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":212}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":40066,"byte_end":40072,"line_start":776,"line_end":776,"column_start":12,"column_end":18},"name":"encode","qualname":"::encoding::message::encode","value":"fn <M, B> (tag: u32, msg: &M, buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":40324,"byte_end":40329,"line_start":786,"line_end":786,"column_start":12,"column_end":17},"name":"merge","qualname":"::encoding::message::merge","value":"fn <M, B> (wire_type: WireType, msg: &mut M, buf: &mut B) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":204},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":40589,"byte_end":40604,"line_start":795,"line_end":795,"column_start":12,"column_end":27},"name":"encode_repeated","qualname":"::encoding::message::encode_repeated","value":"fn <M, B> (tag: u32, messages: &[M], buf: &mut B) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":207},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":40798,"byte_end":40812,"line_start":805,"line_end":805,"column_start":12,"column_end":26},"name":"merge_repeated","qualname":"::encoding::message::merge_repeated","value":"fn <M, B> (wire_type: WireType, messages: &mut Vec<M>, buf: &mut B) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":210},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":41229,"byte_end":41240,"line_start":822,"line_end":822,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"::encoding::message::encoded_len","value":"fn <M> (tag: u32, msg: &M) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":41208,"byte_end":41217,"line_start":821,"line_end":821,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":212},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":41451,"byte_end":41471,"line_start":831,"line_end":831,"column_start":12,"column_end":32},"name":"encoded_len_repeated","qualname":"::encoding::message::encoded_len_repeated","value":"fn <M> (tag: u32, messages: &[M]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":41430,"byte_end":41439,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":216},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":47994,"byte_end":48002,"line_start":1029,"line_end":1029,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::encoding::hash_map","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":540},{"krate":0,"index":546},{"krate":0,"index":551},{"krate":0,"index":559},{"krate":0,"index":566}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":217},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":48035,"byte_end":48044,"line_start":1033,"line_end":1033,"column_start":9,"column_end":18},"name":"btree_map","qualname":"::encoding::btree_map","value":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":583},{"krate":0,"index":589},{"krate":0,"index":594},{"krate":0,"index":602},{"krate":0,"index":609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":229},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":540,"byte_end":563,"line_start":23,"line_end":23,"column_start":8,"column_end":31},"name":"encode_length_delimiter","qualname":"::encode_length_delimiter","value":"fn <B> (length: usize, buf: &mut B) -> Result<(), EncodeError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes a length delimiter to the buffer.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":1146,"byte_end":1166,"line_start":41,"line_end":41,"column_start":8,"column_end":28},"name":"length_delimiter_len","qualname":"::length_delimiter_len","value":"fn (length: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the encoded length of a length delimiter.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":232},"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":1821,"byte_end":1844,"line_start":56,"line_end":56,"column_start":8,"column_end":31},"name":"decode_length_delimiter","qualname":"::decode_length_delimiter","value":"fn <B> (buf: B) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a length delimiter from the buffer.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":3325,"byte_end":3336,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4036,"byte_end":4047,"line_start":47,"line_end":47,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4352,"byte_end":4363,"line_start":57,"line_end":57,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4468,"byte_end":4473,"line_start":63,"line_end":63,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4926,"byte_end":4937,"line_start":80,"line_end":80,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5457,"byte_end":5468,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5749,"byte_end":5760,"line_start":111,"line_end":111,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5913,"byte_end":5918,"line_start":117,"line_end":117,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":9605,"byte_end":9608,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/types.rs","byte_start":15481,"byte_end":15487,"line_start":246,"line_end":246,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/types.rs","byte_start":16211,"byte_end":16214,"line_start":279,"line_end":279,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22738,"byte_end":22746,"line_start":202,"line_end":202,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/lib.rs","byte_start":115,"byte_end":123,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":143}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":3325,"byte_end":3336,"line_start":23,"line_end":23,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4036,"byte_end":4047,"line_start":47,"line_end":47,"column_start":23,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":236},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4352,"byte_end":4363,"line_start":57,"line_end":57,"column_start":23,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4468,"byte_end":4473,"line_start":63,"line_end":63,"column_start":32,"column_end":37},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":2469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":4926,"byte_end":4937,"line_start":80,"line_end":80,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5457,"byte_end":5468,"line_start":100,"line_end":100,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5749,"byte_end":5760,"line_start":111,"line_end":111,"column_start":23,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/error.rs","byte_start":5913,"byte_end":5918,"line_start":117,"line_end":117,"column_start":32,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":1,"index":2469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6236,"byte_end":6241,"line_start":11,"line_end":11,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6244,"byte_end":6248,"line_start":11,"line_end":11,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":6251,"byte_end":6255,"line_start":11,"line_end":11,"column_start":35,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/message.rs","byte_start":9605,"byte_end":9608,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/types.rs","byte_start":15481,"byte_end":15487,"line_start":246,"line_end":246,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/types.rs","byte_start":16211,"byte_end":16214,"line_start":279,"line_end":279,"column_start":18,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":38}},{"span":{"file_name":"/home/matthew/.cargo/registry/src/github.com-1ecc6299db9ec823/prost-0.5.0/src/encoding.rs","byte_start":22738,"byte_end":22746,"line_start":202,"line_end":202,"column_start":6,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":265},"to":{"krate":4294967295,"index":4294967295}}]}